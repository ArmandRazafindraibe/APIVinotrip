// <auto-generated />
using System;
using APIVinotrip.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace APIVinotrip.Migrations
{
    [DbContext(typeof(DBVinotripContext))]
    partial class DBVinotripContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.APIVinotrip.Models.EntityFramework.Possede", b =>
                {
                    b.Property<int>("IdActivite")
                        .HasColumnType("integer")
                        .HasColumnName("idactivite");

                    b.Property<int>("IdDescriptionCommande")
                        .HasColumnType("integer")
                        .HasColumnName("iddescriptioncommande");

                    b.HasKey("IdActivite", "IdDescriptionCommande")
                        .HasName("pk_possede");

                    b.HasIndex("IdDescriptionCommande");

                    b.ToTable("possede", (string)null);
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Activite", b =>
                {
                    b.Property<int>("IdActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idactivite");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdActivite"));

                    b.Property<string>("LibelleActivite")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("libelleactivite");

                    b.Property<decimal?>("PrixActivite")
                        .HasColumnType("NUMERIC(8,2)")
                        .HasColumnName("prixactivite");

                    b.HasKey("IdActivite")
                        .HasName("pk_activite");

                    b.ToTable("activite");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("IdAdresse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idadresse");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAdresse"));

                    b.Property<string>("CpAdresse")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cpadresse");

                    b.Property<int?>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    b.Property<int?>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<string>("NomAdresse")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nomadresse");

                    b.Property<string>("NomAdresseDestinataire")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prenomadressedestinataire");

                    b.Property<string>("NumAdresse")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numadresse");

                    b.Property<string>("PaysAdresse")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("paysadresse")
                        .HasDefaultValueSql("'France'::character varying");

                    b.Property<string>("PrenomAdresseDestination")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nomadressedestinataire");

                    b.Property<string>("RueAdresse")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("rueadresse");

                    b.Property<string>("VilleAdresse")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("villeadresse");

                    b.HasKey("IdAdresse")
                        .HasName("pk_adresse");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdPartenaire");

                    b.ToTable("adresse");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Appartient", b =>
                {
                    b.Property<int>("IdVisite")
                        .HasColumnType("integer")
                        .HasColumnName("idvisite");

                    b.Property<int>("IdEtape")
                        .HasColumnType("integer")
                        .HasColumnName("idetape");

                    b.HasKey("IdVisite", "IdEtape")
                        .HasName("pk_appartient");

                    b.HasIndex("IdEtape");

                    b.ToTable("appartient", (string)null);
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.AutreSociete", b =>
                {
                    b.Property<int>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<string>("MailPartenaire")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mailpartenaire");

                    b.Property<string>("NomPartenaire")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nompartenaire");

                    b.Property<string>("Telpartenaire")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("telpartenaire")
                        .IsFixedLength();

                    b.HasKey("IdPartenaire")
                        .HasName("pk_autresociete");

                    b.ToTable("autresociete");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Avis", b =>
                {
                    b.Property<int>("IdAvis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idavis");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAvis"));

                    b.Property<DateTime?>("DateAvis")
                        .HasColumnType("date")
                        .HasColumnName("dateavis");

                    b.Property<string>("DescriptionAvis")
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("descriptionavis");

                    b.Property<int?>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    b.Property<int?>("IdSejour")
                        .HasColumnType("integer")
                        .HasColumnName("idsejour");

                    b.Property<int?>("NoteAvis")
                        .HasColumnType("integer")
                        .HasColumnName("noteavis");

                    b.Property<string>("PhotoAvis")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("photoavis");

                    b.Property<string>("TitreAvis")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("titreavis");

                    b.HasKey("IdAvis")
                        .HasName("pk_avis");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdSejour");

                    b.ToTable("avis");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Property<int>("IdCB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcb");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCB"));

                    b.Property<bool?>("Actif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("actif");

                    b.Property<DateTime?>("DateExpirationCreditCard")
                        .HasColumnType("date")
                        .HasColumnName("dateexpirationcreditcard")
                        .IsFixedLength();

                    b.Property<int?>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    b.Property<string>("NumeroCB")
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .HasColumnName("numerocbclient")
                        .IsFixedLength();

                    b.Property<string>("NumeroCVCCarte")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("fincodecarte");

                    b.Property<string>("titulaireCb")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("titulairecb");

                    b.HasKey("IdCB")
                        .HasName("pk_carte_bancaire");

                    b.HasIndex("IdClient");

                    b.ToTable("carte_bancaire");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CategorieParticipant", b =>
                {
                    b.Property<int>("IdCategorieParticipant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcategorieparticipant");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCategorieParticipant"));

                    b.Property<string>("LibelleCategorieParticipant")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libellecategorieparticipant");

                    b.HasKey("IdCategorieParticipant")
                        .HasName("pk_categorieparticipant");

                    b.ToTable("categorieparticipant");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CategorieSejour", b =>
                {
                    b.Property<int>("IdCategorieSejour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcategoriesejour");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCategorieSejour"));

                    b.Property<string>("LibelleCategoriesSejour")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libellecategoriessejour");

                    b.HasKey("IdCategorieSejour")
                        .HasName("pk_categoriesejour");

                    b.ToTable("categoriesejour");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CategorieVignoble", b =>
                {
                    b.Property<int>("IdCategorieVignoble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcategorievignoble");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCategorieVignoble"));

                    b.Property<string>("LibelleCategorieVignoble")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libellecategorievignoble");

                    b.HasKey("IdCategorieVignoble")
                        .HasName("pk_categorievignoble");

                    b.ToTable("categorievignoble");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Cave", b =>
                {
                    b.Property<int>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<int?>("IdTypeDegustation")
                        .HasColumnType("integer")
                        .HasColumnName("idtypedegustation");

                    b.Property<string>("MailPartenaire")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mailpartenaire");

                    b.Property<string>("TelPartenaire")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("telpartenaire")
                        .IsFixedLength();

                    b.Property<string>("nompartenaire")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nompartenaire");

                    b.HasKey("IdPartenaire")
                        .HasName("pk_cave");

                    b.HasIndex("IdTypeDegustation");

                    b.ToTable("cave");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdClient"));

                    b.Property<bool>("A2f")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("a2f");

                    b.Property<string>("CiviliteClient")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("civiliteclient");

                    b.Property<DateTime?>("DateCreationToken")
                        .HasColumnType("date")
                        .HasColumnName("datecreationtoken");

                    b.Property<DateTime?>("DateDerniereActiviteClient")
                        .HasColumnType("date")
                        .HasColumnName("datederniereactiviteclient");

                    b.Property<DateTime?>("DateNaissanceClient")
                        .HasColumnType("date")
                        .HasColumnName("datenaissanceclient");

                    b.Property<string>("EmailClient")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("emailclient");

                    b.Property<int?>("IdRole")
                        .HasColumnType("integer")
                        .HasColumnName("idrole");

                    b.Property<string>("MdpClient")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("motdepasseclient");

                    b.Property<string>("NomClient")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nomclient");

                    b.Property<string>("PrenomClient")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prenomclient");

                    b.Property<string>("TelClient")
                        .HasMaxLength(12)
                        .HasColumnType("character(12)")
                        .HasColumnName("telephoneclient")
                        .IsFixedLength();

                    b.Property<string>("TokenResetMDP")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .HasColumnName("tokenresetmdp")
                        .HasDefaultValueSql("NULL::bpchar")
                        .IsFixedLength();

                    b.Property<bool>("offresPromotionnellesClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("offrespromotionnellesclient");

                    b.HasKey("IdClient")
                        .HasName("pk_client");

                    b.HasIndex("IdRole");

                    b.ToTable("client");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CodePromo", b =>
                {
                    b.Property<int>("IdCodePromo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcodepromo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCodePromo"));

                    b.Property<string>("LibelleCodePromo")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("libellecodepromo");

                    b.Property<int?>("Reduction")
                        .HasColumnType("integer")
                        .HasColumnName("reduction");

                    b.HasKey("IdCodePromo")
                        .HasName("pk_codepromo");

                    b.ToTable("codepromo");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Commande", b =>
                {
                    b.Property<int>("IdCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcommande");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCommande"));

                    b.Property<DateTime?>("DateCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("datecommande")
                        .HasDefaultValueSql("'2025-01-01'::date");

                    b.Property<string>("EtatCommande")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("etatcommande")
                        .HasDefaultValueSql("'En attente de validation'::character varying");

                    b.Property<int?>("IdAdresseFacturation")
                        .HasColumnType("integer")
                        .HasColumnName("idadressefacturation");

                    b.Property<int?>("IdAdresseLivraison")
                        .HasColumnType("integer")
                        .HasColumnName("idadresselivraison");

                    b.Property<int?>("IdCB")
                        .HasColumnType("integer")
                        .HasColumnName("idcb");

                    b.Property<int?>("IdClientAcheteur")
                        .HasColumnType("integer")
                        .HasColumnName("idclientacheteur");

                    b.Property<int?>("IdClientBeneficiaire")
                        .HasColumnType("integer")
                        .HasColumnName("idclientbeneficiaire");

                    b.Property<int>("IdCodePromo")
                        .HasMaxLength(20)
                        .HasColumnType("integer")
                        .HasColumnName("idcodepromo");

                    b.Property<int?>("IdPanier")
                        .HasColumnType("integer")
                        .HasColumnName("idpanier");

                    b.Property<string>("TypePayementCommande")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("typepaiementcommande");

                    b.Property<bool>("ValidationClient")
                        .HasColumnType("boolean")
                        .HasColumnName("validationclient");

                    b.Property<string>("codereduction")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("codereduction");

                    b.HasKey("IdCommande")
                        .HasName("pk_commande");

                    b.HasIndex("IdAdresseFacturation");

                    b.HasIndex("IdAdresseLivraison");

                    b.HasIndex("IdCB");

                    b.HasIndex("IdClientAcheteur");

                    b.HasIndex("IdClientBeneficiaire");

                    b.HasIndex("IdCodePromo");

                    b.HasIndex("IdPanier");

                    b.ToTable("commande");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Comporte", b =>
                {
                    b.Property<int>("IdActivite")
                        .HasColumnType("integer")
                        .HasColumnName("idactivite");

                    b.Property<int>("IdDescriptionPanier")
                        .HasColumnType("integer")
                        .HasColumnName("iddescriptionpanier");

                    b.HasKey("IdActivite", "IdDescriptionPanier")
                        .HasName("pk_comporte");

                    b.HasIndex("IdDescriptionPanier");

                    b.ToTable("comporte", (string)null);
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Constitue", b =>
                {
                    b.Property<int>("IdActivite")
                        .HasColumnType("integer")
                        .HasColumnName("idactivite");

                    b.Property<int>("IdEtape")
                        .HasColumnType("integer")
                        .HasColumnName("idetape");

                    b.HasKey("IdActivite", "IdEtape")
                        .HasName("pk_constitue");

                    b.HasIndex("IdEtape");

                    b.ToTable("constitue");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.DescriptionCommande", b =>
                {
                    b.Property<int>("IdDescriptionCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iddescriptioncommande");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDescriptionCommande"));

                    b.Property<DateTime?>("DateDebut")
                        .HasColumnType("date")
                        .HasColumnName("datedebut");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("date")
                        .HasColumnName("datefin");

                    b.Property<bool?>("DisponibiliteHebergement")
                        .HasColumnType("boolean")
                        .HasColumnName("disponibilitehebergement");

                    b.Property<bool?>("ECoffret")
                        .HasColumnType("boolean")
                        .HasColumnName("ecoffret");

                    b.Property<int?>("IdCB")
                        .HasColumnType("integer")
                        .HasColumnName("idcb");

                    b.Property<int?>("IdCommande")
                        .HasColumnType("integer")
                        .HasColumnName("idcommande");

                    b.Property<int?>("IdHebergement")
                        .HasColumnType("integer")
                        .HasColumnName("idhebergement");

                    b.Property<int?>("IdSejour")
                        .HasColumnType("integer")
                        .HasColumnName("idsejour");

                    b.Property<int?>("NbAdultes")
                        .HasColumnType("integer")
                        .HasColumnName("nbadultes");

                    b.Property<int?>("NbChambresDouble")
                        .HasColumnType("integer")
                        .HasColumnName("nbchambresdouble");

                    b.Property<int?>("NbChambresSimple")
                        .HasColumnType("integer")
                        .HasColumnName("nbchambressimple");

                    b.Property<int?>("NbChambresTriple")
                        .HasColumnType("integer")
                        .HasColumnName("nbchambrestriple");

                    b.Property<int?>("NbEnfants")
                        .HasColumnType("integer")
                        .HasColumnName("nbenfants");

                    b.Property<bool?>("Offrir")
                        .HasColumnType("boolean")
                        .HasColumnName("offrir");

                    b.Property<int?>("Quantite")
                        .HasColumnType("integer")
                        .HasColumnName("quantite");

                    b.Property<bool?>("ValidationClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("validationclient");

                    b.HasKey("IdDescriptionCommande")
                        .HasName("pk_descriptioncommande");

                    b.HasIndex("IdCB");

                    b.HasIndex("IdCommande");

                    b.HasIndex("IdHebergement");

                    b.HasIndex("IdSejour");

                    b.ToTable("descriptioncommande");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.DescriptionPanier", b =>
                {
                    b.Property<int>("IdDescriptionPanier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iddescriptionpanier");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDescriptionPanier"));

                    b.Property<DateTime?>("DateDebut")
                        .HasColumnType("date")
                        .HasColumnName("datedebut");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("date")
                        .HasColumnName("datefin");

                    b.Property<bool?>("DisponibiliteHebergement")
                        .HasColumnType("boolean")
                        .HasColumnName("disponibilitehebergement");

                    b.Property<bool?>("ECoffret")
                        .HasColumnType("boolean")
                        .HasColumnName("ecoffret");

                    b.Property<int?>("IdHebergement")
                        .HasColumnType("integer")
                        .HasColumnName("idhebergement");

                    b.Property<int?>("IdPanier")
                        .HasColumnType("integer")
                        .HasColumnName("idpanier");

                    b.Property<int?>("IdSejour")
                        .HasColumnType("integer")
                        .HasColumnName("idsejour");

                    b.Property<int?>("NbAdultes")
                        .HasColumnType("integer")
                        .HasColumnName("nbadultes");

                    b.Property<int?>("NbChambresDouble")
                        .HasColumnType("integer")
                        .HasColumnName("nbchambresdouble");

                    b.Property<int?>("NbChambresSimple")
                        .HasColumnType("integer")
                        .HasColumnName("nbchambressimple");

                    b.Property<int?>("NbChambresTriple")
                        .HasColumnType("integer")
                        .HasColumnName("nbchambrestriple");

                    b.Property<int?>("NbEnfants")
                        .HasColumnType("integer")
                        .HasColumnName("nbenfants");

                    b.Property<bool?>("Offrir")
                        .HasColumnType("boolean")
                        .HasColumnName("offrir");

                    b.Property<int?>("Quantite")
                        .HasColumnType("integer")
                        .HasColumnName("quantite");

                    b.HasKey("IdDescriptionPanier")
                        .HasName("pk_descriptionpanier");

                    b.HasIndex("IdHebergement");

                    b.HasIndex("IdPanier");

                    b.HasIndex("IdSejour");

                    b.ToTable("descriptionpanier");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Detient", b =>
                {
                    b.Property<int>("IdRepas")
                        .HasColumnType("integer")
                        .HasColumnName("idrepas");

                    b.Property<int>("IdDescriptionPanier")
                        .HasColumnType("integer")
                        .HasColumnName("iddescriptionpanier");

                    b.HasKey("IdRepas", "IdDescriptionPanier")
                        .HasName("pk_detient");

                    b.HasIndex("IdDescriptionPanier");

                    b.ToTable("detient", (string)null);
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Duree", b =>
                {
                    b.Property<int>("IdDuree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idduree");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDuree"));

                    b.Property<string>("LibelleDuree")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libelleduree");

                    b.HasKey("IdDuree")
                        .HasName("pk_duree");

                    b.ToTable("duree");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.EstProposePar", b =>
                {
                    b.Property<int>("Idpartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<int>("Idactivite")
                        .HasColumnType("integer")
                        .HasColumnName("idactivite");

                    b.Property<int>("Idadresse")
                        .HasColumnType("integer")
                        .HasColumnName("idadresse");

                    b.HasKey("Idpartenaire", "Idactivite", "Idadresse")
                        .HasName("pk_est_propose_par");

                    b.HasIndex("Idactivite");

                    b.HasIndex("Idadresse");

                    b.ToTable("estproposepar");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Etape", b =>
                {
                    b.Property<int>("IdEtape")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idetape");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEtape"));

                    b.Property<string>("DescriptionEtape")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)")
                        .HasColumnName("descriptionetape");

                    b.Property<int?>("IdHebergement")
                        .HasColumnType("integer")
                        .HasColumnName("idhebergement");

                    b.Property<int?>("IdSejour")
                        .HasColumnType("integer")
                        .HasColumnName("idsejour");

                    b.Property<string>("PhotoEtape")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("photoetape");

                    b.Property<string>("TitreEtape")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("titreetape");

                    b.Property<string>("URLEtape")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("urletape");

                    b.Property<string>("VideoEtape")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("videoetape");

                    b.HasKey("IdEtape")
                        .HasName("pk_etape");

                    b.HasIndex("IdHebergement");

                    b.HasIndex("IdSejour");

                    b.ToTable("etape");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Favoris", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    b.Property<int>("IdSejour")
                        .HasColumnType("integer")
                        .HasColumnName("idsejour");

                    b.HasKey("IdClient", "IdSejour")
                        .HasName("pk_favoris");

                    b.HasIndex("IdSejour");

                    b.ToTable("favoris", (string)null);
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Hebergement", b =>
                {
                    b.Property<int>("IdHebergement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idhebergement");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdHebergement"));

                    b.Property<string>("DescriptionHebergement")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)")
                        .HasColumnName("descriptionhebergement");

                    b.Property<int>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<string>("LienHebergement")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("lienhebergement");

                    b.Property<string>("PhotoHebergement")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("photohebergement");

                    b.Property<decimal?>("PrixHebergement")
                        .HasColumnType("NUMERIC(8,2)")
                        .HasColumnName("prixhebergement");

                    b.HasKey("IdHebergement")
                        .HasName("pk_hebergement");

                    b.HasIndex("IdPartenaire");

                    b.ToTable("hebergement");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Hotel", b =>
                {
                    b.Property<int>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<int?>("CategorieHotel")
                        .HasColumnType("integer")
                        .HasColumnName("categoriehotel");

                    b.Property<string>("MailPartenaire")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mailpartenaire");

                    b.Property<string>("NomPartenaire")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nompartenaire");

                    b.Property<int?>("NombreChambresHotel")
                        .HasColumnType("integer")
                        .HasColumnName("nombrechambreshotel");

                    b.Property<string>("TelPartenaire")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("telpartenaire")
                        .IsFixedLength();

                    b.HasKey("IdPartenaire")
                        .HasName("pk_hotel");

                    b.ToTable("hotel");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Inclus", b =>
                {
                    b.Property<int>("IdRepas")
                        .HasColumnType("integer")
                        .HasColumnName("idrepas");

                    b.Property<int>("IdEtape")
                        .HasColumnType("integer")
                        .HasColumnName("idetape");

                    b.HasKey("IdRepas", "IdEtape")
                        .HasName("pk_inclus");

                    b.HasIndex("IdEtape");

                    b.ToTable("inclus", (string)null);
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Localite", b =>
                {
                    b.Property<int>("IdLocalite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idlocalite");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLocalite"));

                    b.Property<int?>("IdCategorieVignoble")
                        .HasColumnType("integer")
                        .HasColumnName("idcategorievignoble");

                    b.Property<string>("LibelleLocalite")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libellelocalite");

                    b.HasKey("IdLocalite")
                        .HasName("pk_localite");

                    b.HasIndex("IdCategorieVignoble");

                    b.ToTable("localite");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Mange1", b =>
                {
                    b.Property<int>("IdRepas")
                        .HasColumnType("integer")
                        .HasColumnName("idrepas");

                    b.Property<int>("IdDescriptionCommande")
                        .HasColumnType("integer")
                        .HasColumnName("iddescriptioncommande");

                    b.HasKey("IdRepas", "IdDescriptionCommande")
                        .HasName("pk_contient");

                    b.HasIndex("IdDescriptionCommande");

                    b.ToTable("mange1", (string)null);
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Panier", b =>
                {
                    b.Property<int>("IdPanier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idpanier");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPanier"));

                    b.Property<DateTime?>("DateAjoutPanier")
                        .HasColumnType("date")
                        .HasColumnName("dateheurepanier");

                    b.Property<int?>("IdCodePromo")
                        .HasColumnType("integer")
                        .HasColumnName("idcodepromo");

                    b.HasKey("IdPanier")
                        .HasName("pk_panier");

                    b.HasIndex("IdCodePromo");

                    b.ToTable("panier");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Partenaire", b =>
                {
                    b.Property<int>("IdPartenaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPartenaire"));

                    b.Property<string>("MailPartenaire")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mailpartenaire");

                    b.Property<string>("NomPartenaire")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nompartenaire");

                    b.Property<string>("TelPartenaire")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("telpartenaire")
                        .IsFixedLength();

                    b.HasKey("IdPartenaire")
                        .HasName("pk_partenaire");

                    b.ToTable("partenaire");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Photo", b =>
                {
                    b.Property<int>("IdPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idphoto");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPhoto"));

                    b.Property<int>("IdSejour")
                        .HasColumnType("integer")
                        .HasColumnName("idsejour");

                    b.HasKey("IdPhoto")
                        .HasName("pk_photos");

                    b.HasIndex("IdSejour");

                    b.ToTable("photo");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Repas", b =>
                {
                    b.Property<int>("IdRepas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idrepas");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRepas"));

                    b.Property<string>("DescriptionRepas")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)")
                        .HasColumnName("descriptionrepas");

                    b.Property<int?>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<string>("PhotoRepas")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("photorepas");

                    b.Property<decimal?>("PrixRepas")
                        .HasColumnType("NUMERIC(8,2)")
                        .HasColumnName("prixrepas");

                    b.HasKey("IdRepas")
                        .HasName("pk_repas");

                    b.HasIndex("IdPartenaire");

                    b.ToTable("repas");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Reponse", b =>
                {
                    b.Property<int>("IdReponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idreponse");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReponse"));

                    b.Property<string>("DescriptionReponse")
                        .HasMaxLength(2056)
                        .HasColumnType("character varying(2056)")
                        .HasColumnName("descriptionreponse");

                    b.Property<int?>("IdAvis")
                        .HasColumnType("integer")
                        .HasColumnName("idavis");

                    b.HasKey("IdReponse")
                        .HasName("pk_reponse");

                    b.HasIndex("IdAvis");

                    b.ToTable("reponse");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Restaurant", b =>
                {
                    b.Property<int>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<int?>("IdTypeCuisine")
                        .HasColumnType("integer")
                        .HasColumnName("idtypecuisine");

                    b.Property<string>("MailPartenaire")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mailpartenaire");

                    b.Property<string>("NomPartenaire")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nompartenaire");

                    b.Property<int?>("NombreEtoilesRestaurant")
                        .HasColumnType("integer")
                        .HasColumnName("nombreetoilesrestaurant");

                    b.Property<string>("SpecialiteRestaurant")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("specialiterestaurant");

                    b.Property<string>("TelPartenaire")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("telpartenaire")
                        .IsFixedLength();

                    b.HasKey("IdPartenaire")
                        .HasName("pk_restaurant");

                    b.HasIndex("IdTypeCuisine");

                    b.ToTable("restaurant");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idrole");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRole"));

                    b.Property<string>("LibelleRole")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libellerole");

                    b.HasKey("IdRole")
                        .HasName("pk_roles");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.RouteDesVins", b =>
                {
                    b.Property<int>("IdRoute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idroute");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRoute"));

                    b.Property<string>("DescriptionRoute")
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("descriptionroute");

                    b.Property<string>("LibRoute")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("titreroute");

                    b.Property<string>("PhotoRoute")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("photoroute");

                    b.HasKey("IdRoute")
                        .HasName("pk_route_des_vins");

                    b.ToTable("route_des_vins");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.SeLocalise", b =>
                {
                    b.Property<int>("IdRoute")
                        .HasColumnType("integer")
                        .HasColumnName("idroute");

                    b.Property<int>("IdCategorieVignoble")
                        .HasColumnType("integer")
                        .HasColumnName("idcategorievignoble");

                    b.HasKey("IdRoute", "IdCategorieVignoble")
                        .HasName("pk_se_localise");

                    b.HasIndex("IdCategorieVignoble");

                    b.ToTable("se_localise", (string)null);
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Sejour", b =>
                {
                    b.Property<int>("Idsejour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idsejour");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idsejour"));

                    b.Property<string>("Descriptionsejour")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)")
                        .HasColumnName("descriptionsejour");

                    b.Property<int>("Idcategorieparticipant")
                        .HasColumnType("integer")
                        .HasColumnName("idcategorieparticipant");

                    b.Property<int>("Idcategoriesejour")
                        .HasColumnType("integer")
                        .HasColumnName("idcategoriesejour");

                    b.Property<int>("Idcategorievignoble")
                        .HasColumnType("integer")
                        .HasColumnName("idcategorievignoble");

                    b.Property<int>("Idduree")
                        .HasColumnType("integer")
                        .HasColumnName("idduree");

                    b.Property<int?>("Idlocalite")
                        .HasColumnType("integer")
                        .HasColumnName("idlocalite");

                    b.Property<int>("Idtheme")
                        .HasColumnType("integer")
                        .HasColumnName("idtheme");

                    b.Property<decimal?>("Nouveauprixsejour")
                        .HasColumnType("NUMERIC(8,2)")
                        .HasColumnName("nouveauprixsejour");

                    b.Property<string>("Photosejour")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("photosejour");

                    b.Property<decimal?>("Prixsejour")
                        .HasColumnType("NUMERIC(8,2)")
                        .HasColumnName("prixsejour");

                    b.Property<bool?>("Publie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("publie");

                    b.Property<string>("Titresejour")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("titresejour");

                    b.HasKey("Idsejour")
                        .HasName("pk_sejour");

                    b.HasIndex("Idcategorieparticipant");

                    b.HasIndex("Idcategoriesejour");

                    b.HasIndex("Idcategorievignoble");

                    b.HasIndex("Idduree");

                    b.HasIndex("Idlocalite");

                    b.HasIndex("Idtheme");

                    b.ToTable("sejour");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Theme", b =>
                {
                    b.Property<int>("IdTheme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtheme");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTheme"));

                    b.Property<string>("LibelleTheme")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libelletheme");

                    b.HasKey("IdTheme")
                        .HasName("pk_theme");

                    b.ToTable("theme");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.TypeCuisine", b =>
                {
                    b.Property<int>("IdTypeCuisine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtypecuisine");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeCuisine"));

                    b.Property<string>("LibelleTypeCuisine")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libelletypecuisine");

                    b.HasKey("IdTypeCuisine")
                        .HasName("pk_typecuisine");

                    b.ToTable("typecuisine");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.TypeDegustation", b =>
                {
                    b.Property<int>("IdTypeDegustation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtypedegustation");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeDegustation"));

                    b.Property<string>("LibelleTypeDegustation")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("libelletypedegustation");

                    b.HasKey("IdTypeDegustation")
                        .HasName("pk_typedegustation");

                    b.ToTable("typedegustation");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Visite", b =>
                {
                    b.Property<int>("IdVisite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idvisite");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVisite"));

                    b.Property<string>("DescriptionVisite")
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)")
                        .HasColumnName("descriptionvisite");

                    b.Property<int?>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("idpartenaire");

                    b.Property<string>("LienVisite")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("lienvisite");

                    b.Property<string>("PhotoVisite")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("photovisite");

                    b.HasKey("IdVisite")
                        .HasName("pk_visite");

                    b.HasIndex("IdPartenaire");

                    b.ToTable("visite");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.APIVinotrip.Models.EntityFramework.Possede", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Activite", "LActivite")
                        .WithMany("LesPossedes")
                        .HasForeignKey("IdActivite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_associat_associati_activite");

                    b.HasOne("APIVinotrip.Models.EntityFramework.DescriptionCommande", "LaDescriptionCommande")
                        .WithMany("LesPossedes")
                        .HasForeignKey("IdDescriptionCommande")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_associat_associati_descript");

                    b.Navigation("LActivite");

                    b.Navigation("LaDescriptionCommande");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Adresse", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Client", "Client")
                        .WithMany("Adresses")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_adresse_associati_client");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Partenaire", "Partenaire")
                        .WithMany("AdressesPartenaires")
                        .HasForeignKey("IdPartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_adresse_localise_partenai");

                    b.Navigation("Client");

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Appartient", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Etape", "SonEtape")
                        .WithMany("AppartientCollection")
                        .HasForeignKey("IdEtape")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_appartenance_etape");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Visite", "LaVisite")
                        .WithMany("AppartientCollection")
                        .HasForeignKey("IdVisite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_appartenace_visite");

                    b.Navigation("LaVisite");

                    b.Navigation("SonEtape");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.AutreSociete", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Partenaire", "Partenaire")
                        .WithOne("AutreSocietePartenaire")
                        .HasForeignKey("APIVinotrip.Models.EntityFramework.AutreSociete", "IdPartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_autresoc_heritage__partenai");

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Avis", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Client", "Client")
                        .WithMany("LesAvis")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_avis_associati_client");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Sejour", "Sejour")
                        .WithMany("AvisNavigation")
                        .HasForeignKey("IdSejour")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_avis_critique_sejour");

                    b.Navigation("Client");

                    b.Navigation("Sejour");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Client", "Client")
                        .WithMany("CartesBancaires")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_carte_ba_associati_client");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Cave", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Partenaire", "Partenaire")
                        .WithOne("Caves")
                        .HasForeignKey("APIVinotrip.Models.EntityFramework.Cave", "IdPartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cave_heritage__partenai");

                    b.HasOne("APIVinotrip.Models.EntityFramework.TypeDegustation", "TypeDegustation")
                        .WithMany("Caves")
                        .HasForeignKey("IdTypeDegustation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cave_fait_degu_typedegu");

                    b.Navigation("Partenaire");

                    b.Navigation("TypeDegustation");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Client", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Role", "Role")
                        .WithMany("Clients")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_client_associati_roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Commande", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Adresse", "AdresseFacturation")
                        .WithMany("CommandesFacturation")
                        .HasForeignKey("IdAdresseFacturation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_commande_associati_adresse2");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Adresse", "AdresseLivraison")
                        .WithMany("CommandesLivraison")
                        .HasForeignKey("IdAdresseLivraison")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_commande_associati_adresse");

                    b.HasOne("APIVinotrip.Models.EntityFramework.CarteBancaire", "CarteBancaire")
                        .WithMany("Commandes")
                        .HasForeignKey("IdCB")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_commande_associati_carte_ba");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Client", "ClientAcheteur")
                        .WithMany("Commandes")
                        .HasForeignKey("IdClientAcheteur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_commande_associati_client2");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Client", "ClientBeneficiaire")
                        .WithMany("CommandesOfferts")
                        .HasForeignKey("IdClientBeneficiaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_commande_associati_client");

                    b.HasOne("APIVinotrip.Models.EntityFramework.CodePromo", "CodeReductionNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("IdCodePromo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_commande_diminue_codeprom");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Panier", "PanierCommande")
                        .WithMany("Commandes")
                        .HasForeignKey("IdPanier")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_commande_associe_panier");

                    b.Navigation("AdresseFacturation");

                    b.Navigation("AdresseLivraison");

                    b.Navigation("CarteBancaire");

                    b.Navigation("ClientAcheteur");

                    b.Navigation("ClientBeneficiaire");

                    b.Navigation("CodeReductionNavigation");

                    b.Navigation("PanierCommande");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Comporte", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Activite", "UneActivite")
                        .WithMany("ListeActivites")
                        .HasForeignKey("IdActivite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_activite_comprise");

                    b.HasOne("APIVinotrip.Models.EntityFramework.DescriptionPanier", "DescriptionPanierComporte")
                        .WithMany("ListeDescriptions")
                        .HasForeignKey("IdDescriptionPanier")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_associat_associati_descript");

                    b.Navigation("DescriptionPanierComporte");

                    b.Navigation("UneActivite");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Constitue", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Activite", "LActivite")
                        .WithMany("Constitues")
                        .HasForeignKey("IdActivite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_appartie_appartien_activite");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Etape", "SonEtape")
                        .WithMany("Constitues")
                        .HasForeignKey("IdEtape")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_appartie_appartien_etape");

                    b.Navigation("LActivite");

                    b.Navigation("SonEtape");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.DescriptionCommande", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.CarteBancaire", "DescriptionsCommandeCB")
                        .WithMany("DescriptionsCommande")
                        .HasForeignKey("IdCB")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_descript_associati_carte_ba");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Commande", "Commande")
                        .WithMany("DescriptionsCommande")
                        .HasForeignKey("IdCommande")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_descript_associati_commande");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Hebergement", "Hebergements")
                        .WithMany("DescriptionsCommande")
                        .HasForeignKey("IdHebergement")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_descript_associati_hebergem");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Sejour", "Sejours")
                        .WithMany("DescriptioncommandesNavigation")
                        .HasForeignKey("IdSejour")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_descript_associati_sejour");

                    b.Navigation("Commande");

                    b.Navigation("DescriptionsCommandeCB");

                    b.Navigation("Hebergements");

                    b.Navigation("Sejours");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.DescriptionPanier", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Hebergement", "Hebergement")
                        .WithMany("DescriptionsPanier")
                        .HasForeignKey("IdHebergement")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_descript_associati_hebergem");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Panier", "Panier")
                        .WithMany("DescriptionsPanier")
                        .HasForeignKey("IdPanier")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_descript_decrit_pa_panier");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Sejour", "Sejour")
                        .WithMany("Descriptionpaniers")
                        .HasForeignKey("IdSejour")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_descript_decrit_se_sejour");

                    b.Navigation("Hebergement");

                    b.Navigation("Panier");

                    b.Navigation("Sejour");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Detient", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.DescriptionPanier", "DescriptionPanierDetient")
                        .WithMany("DetientCollection")
                        .HasForeignKey("IdDescriptionPanier")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_associat_associati_descript");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Repas", "RepasDetient")
                        .WithMany("DetientCollection")
                        .HasForeignKey("IdRepas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_associat_associati_repas");

                    b.Navigation("DescriptionPanierDetient");

                    b.Navigation("RepasDetient");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.EstProposePar", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Activite", "IdactiviteNavigation")
                        .WithMany("EstProposePars")
                        .HasForeignKey("Idactivite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_propose__propose_5_activite");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Adresse", "IdadresseNavigation")
                        .WithMany("EstProposePars")
                        .HasForeignKey("Idadresse")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_propose__propose_6_adresse");

                    b.HasOne("APIVinotrip.Models.EntityFramework.AutreSociete", "IdpartenaireNavigation")
                        .WithMany("EstProposePars")
                        .HasForeignKey("Idpartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_propose__est_propose_par_autresoc");

                    b.Navigation("IdactiviteNavigation");

                    b.Navigation("IdadresseNavigation");

                    b.Navigation("IdpartenaireNavigation");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Etape", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Hebergement", "Hebergement")
                        .WithMany("Etapes")
                        .HasForeignKey("IdHebergement")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_etape_appartien_hebergem");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Sejour", "Sejour")
                        .WithMany("Etapes")
                        .HasForeignKey("IdSejour")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_etape_possede_sejour");

                    b.Navigation("Hebergement");

                    b.Navigation("Sejour");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Favoris", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Client", "LeClient")
                        .WithMany("ListeFavoris")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_favoris_favoris_client");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Sejour", "Sejours")
                        .WithMany("ListeFavoris")
                        .HasForeignKey("IdSejour")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_favoris_favoris2_sejour");

                    b.Navigation("LeClient");

                    b.Navigation("Sejours");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Hebergement", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Hotel", "HebergementHotel")
                        .WithMany("HotelHebergements")
                        .HasForeignKey("IdPartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hebergem_propose_3_hotel");

                    b.Navigation("HebergementHotel");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Hotel", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Partenaire", "Partenaire")
                        .WithOne("HotelPartenaire")
                        .HasForeignKey("APIVinotrip.Models.EntityFramework.Hotel", "IdPartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_hotel_heritage__partenai");

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Inclus", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Etape", "Etape")
                        .WithMany("InclusCollection")
                        .HasForeignKey("IdEtape")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inclusion_etape");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Repas", "Repas")
                        .WithMany("Inclusions")
                        .HasForeignKey("IdRepas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inclus_repas");

                    b.Navigation("Etape");

                    b.Navigation("Repas");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Localite", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.CategorieVignoble", "CategoriesVignoble")
                        .WithMany("Localites")
                        .HasForeignKey("IdCategorieVignoble")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_localite_a_categori");

                    b.Navigation("CategoriesVignoble");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Mange1", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.DescriptionCommande", "DescriptionCommande")
                        .WithMany("RepasCommandes")
                        .HasForeignKey("IdDescriptionCommande")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_descriptioncommande_mange1");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Repas", "UnRepas")
                        .WithMany("RepasManges")
                        .HasForeignKey("IdRepas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_repas_mange");

                    b.Navigation("DescriptionCommande");

                    b.Navigation("UnRepas");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Panier", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.CodePromo", "CodesPromos")
                        .WithMany("Paniers")
                        .HasForeignKey("IdCodePromo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_panier_reduit_codeprom");

                    b.Navigation("CodesPromos");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Photo", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Sejour", "Sejour")
                        .WithMany("Photos")
                        .HasForeignKey("IdSejour")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_photos_associati_sejour");

                    b.Navigation("Sejour");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Repas", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Restaurant", "RestaurantRepas")
                        .WithMany("RepasCollection")
                        .HasForeignKey("IdPartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_repas_propose_2_restaura");

                    b.Navigation("RestaurantRepas");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Reponse", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Avis", "Avis")
                        .WithMany("Reponses")
                        .HasForeignKey("IdAvis")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_reponse_repond_avis");

                    b.Navigation("Avis");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Restaurant", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Partenaire", "Partenaire")
                        .WithOne("Restaurants")
                        .HasForeignKey("APIVinotrip.Models.EntityFramework.Restaurant", "IdPartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_restaura_heritage__partenai");

                    b.HasOne("APIVinotrip.Models.EntityFramework.TypeCuisine", "TypeCuisine")
                        .WithMany("Restaurants")
                        .HasForeignKey("IdTypeCuisine")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_restaura_cuisine_typecuis");

                    b.Navigation("Partenaire");

                    b.Navigation("TypeCuisine");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.SeLocalise", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.CategorieVignoble", "CategoriesVignoble")
                        .WithMany("SesLocalites")
                        .HasForeignKey("IdCategorieVignoble")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_se_local_se_locali_categori");

                    b.HasOne("APIVinotrip.Models.EntityFramework.RouteDesVins", "Route")
                        .WithMany("SesLocalites")
                        .HasForeignKey("IdRoute")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_se_local_se_locali_route");

                    b.Navigation("CategoriesVignoble");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Sejour", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.CategorieParticipant", "IdcategorieparticipantNavigation")
                        .WithMany("Sejours")
                        .HasForeignKey("Idcategorieparticipant")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sejour_destine_a_categori");

                    b.HasOne("APIVinotrip.Models.EntityFramework.CategorieSejour", "IdcategoriesejourNavigation")
                        .WithMany("Sejours")
                        .HasForeignKey("Idcategoriesejour")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sejour_regroupe_categori");

                    b.HasOne("APIVinotrip.Models.EntityFramework.CategorieVignoble", "IdcategorievignobleNavigation")
                        .WithMany("Sejours")
                        .HasForeignKey("Idcategorievignoble")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sejour_categoris_categori");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Duree", "IddureeNavigation")
                        .WithMany("Sejours")
                        .HasForeignKey("Idduree")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sejour_dure_duree");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Localite", "IdlocaliteNavigation")
                        .WithMany("Sejours")
                        .HasForeignKey("Idlocalite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_sejour_se_situe_localite");

                    b.HasOne("APIVinotrip.Models.EntityFramework.Theme", "IdthemeNavigation")
                        .WithMany("Sejours")
                        .HasForeignKey("Idtheme")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sejour_definit_theme");

                    b.Navigation("IdcategorieparticipantNavigation");

                    b.Navigation("IdcategoriesejourNavigation");

                    b.Navigation("IdcategorievignobleNavigation");

                    b.Navigation("IddureeNavigation");

                    b.Navigation("IdlocaliteNavigation");

                    b.Navigation("IdthemeNavigation");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Visite", b =>
                {
                    b.HasOne("APIVinotrip.Models.EntityFramework.Cave", "LaCave")
                        .WithMany("Visites")
                        .HasForeignKey("IdPartenaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_visite_propose_1_cave");

                    b.Navigation("LaCave");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Activite", b =>
                {
                    b.Navigation("Constitues");

                    b.Navigation("EstProposePars");

                    b.Navigation("LesPossedes");

                    b.Navigation("ListeActivites");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Adresse", b =>
                {
                    b.Navigation("CommandesFacturation");

                    b.Navigation("CommandesLivraison");

                    b.Navigation("EstProposePars");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.AutreSociete", b =>
                {
                    b.Navigation("EstProposePars");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Avis", b =>
                {
                    b.Navigation("Reponses");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("DescriptionsCommande");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CategorieParticipant", b =>
                {
                    b.Navigation("Sejours");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CategorieSejour", b =>
                {
                    b.Navigation("Sejours");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CategorieVignoble", b =>
                {
                    b.Navigation("Localites");

                    b.Navigation("Sejours");

                    b.Navigation("SesLocalites");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Cave", b =>
                {
                    b.Navigation("Visites");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Client", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("CartesBancaires");

                    b.Navigation("Commandes");

                    b.Navigation("CommandesOfferts");

                    b.Navigation("LesAvis");

                    b.Navigation("ListeFavoris");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.CodePromo", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("Paniers");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Commande", b =>
                {
                    b.Navigation("DescriptionsCommande");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.DescriptionCommande", b =>
                {
                    b.Navigation("LesPossedes");

                    b.Navigation("RepasCommandes");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.DescriptionPanier", b =>
                {
                    b.Navigation("DetientCollection");

                    b.Navigation("ListeDescriptions");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Duree", b =>
                {
                    b.Navigation("Sejours");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Etape", b =>
                {
                    b.Navigation("AppartientCollection");

                    b.Navigation("Constitues");

                    b.Navigation("InclusCollection");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Hebergement", b =>
                {
                    b.Navigation("DescriptionsCommande");

                    b.Navigation("DescriptionsPanier");

                    b.Navigation("Etapes");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Hotel", b =>
                {
                    b.Navigation("HotelHebergements");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Localite", b =>
                {
                    b.Navigation("Sejours");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Panier", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("DescriptionsPanier");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Partenaire", b =>
                {
                    b.Navigation("AdressesPartenaires");

                    b.Navigation("AutreSocietePartenaire");

                    b.Navigation("Caves");

                    b.Navigation("HotelPartenaire");

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Repas", b =>
                {
                    b.Navigation("DetientCollection");

                    b.Navigation("Inclusions");

                    b.Navigation("RepasManges");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Restaurant", b =>
                {
                    b.Navigation("RepasCollection");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Role", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.RouteDesVins", b =>
                {
                    b.Navigation("SesLocalites");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Sejour", b =>
                {
                    b.Navigation("AvisNavigation");

                    b.Navigation("DescriptioncommandesNavigation");

                    b.Navigation("Descriptionpaniers");

                    b.Navigation("Etapes");

                    b.Navigation("ListeFavoris");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Theme", b =>
                {
                    b.Navigation("Sejours");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.TypeCuisine", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.TypeDegustation", b =>
                {
                    b.Navigation("Caves");
                });

            modelBuilder.Entity("APIVinotrip.Models.EntityFramework.Visite", b =>
                {
                    b.Navigation("AppartientCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
